//
// Copyright (c) Microsoft Corporation. Licensed under the MIT license.
//

#include <openssl/core_names.h>
#include <openssl/params.h>
#include "scossl_helpers.h"

#ifdef __cplusplus
extern "C" {
#endif

// Value provided by CMake, defined in top level CMakeLists.txt
#define P_SCOSSL_VERSION "@SymCrypt-OpenSSL_VERSION@"
#define P_SCOSSL_NAME "symcryptprovider"

typedef struct
{
    OSSL_LIB_CTX *libctx;
    const OSSL_CORE_HANDLE *handle;
} SCOSSL_PROVCTX;

static const OSSL_PARAM p_scossl_param_types[] = {
    OSSL_PARAM_utf8_ptr(OSSL_PROV_PARAM_NAME, NULL, 0),
    OSSL_PARAM_utf8_ptr(OSSL_PROV_PARAM_VERSION, NULL, 0),
    OSSL_PARAM_utf8_ptr(OSSL_PROV_PARAM_BUILDINFO, NULL, 0),
    OSSL_PARAM_int(OSSL_PROV_PARAM_STATUS, NULL),
    OSSL_PARAM_END};

// EVP_MD_CTX_dup is a helpful function for the provider, but was not added until OpenSSL 3.1
// This function is copied from 3.1 to allow its use when the provider is built against 3.0
#if OPENSSL_VERSION_MAJOR == 3 && OPENSSL_VERSION_MINOR == 0
EVP_MD_CTX *EVP_MD_CTX_dup(const EVP_MD_CTX *in);

#endif // OPENSSL_VERSION_MAJOR == 3 && OPENSSL_VERSION_MINOR == 0

#ifdef __cplusplus
}
#endif